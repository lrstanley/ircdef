// Copyright (c) Liam Stanley <me@liamstanley.io>. All rights reserved. Use
// of this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// Authors of the dataset used to generate this file:
//   Copyright (c) 2015-2016 Daniel Oaks <daniel@danieloaks.net>
//   Copyright (c) 2001-2004 Simon Butcher <pickle@alien.net.au>
//   & https://github.com/ircdocs/irc-defs/blob/gh-pages/LICENSE
//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED AND WILL BE OVERWRITTEN.

// Package chanmodes provides constants and variables based on irc
// definitions located here:
//   [Channel Modes]
//   - https://defs.ircdocs.horse/defs/chanmodes.html
//   - https://github.com/ircdocs/irc-defs/blob/gh-pages/_data/chanmodes.yaml
//
//   Data revision: v1.20
//
package chanmodes

// ChanMode is the mode char for irc2 based protocol(s).
type ChanMode rune

const (
	// AdminOnlyUnreal (ADMIN_ONLY) -- Only server/service/network
	// (co-)administrators can join the channel
	//
	//  - conflict: true
	//  - origin: "Unreal"
	AdminOnlyUnreal ChanMode = 'A'
	// AllowInviteInspircd (ALLOW_INVITE) -- Allow everyone to use INVITE,
	// even non-privileged users
	//
	//  - conflict: true
	//  - origin: "InspIRCd"
	AllowInviteInspircd ChanMode = 'A'
	// Anonymous (ANONYMOUS) -- Marks the channel to use anonymous
	// conversations. All conversations, and people joining/parting are
	// viewed all from 'anonymous!anonymous@anonymous'. Users quitting are
	// seen as users parting the channel with no reason.
	//
	//  - conflict: true
	//  - origin: "RFC2811"
	Anonymous ChanMode = 'a'
	// AuditoriumUnreal (AUDITORIUM) -- When set, makes /names and /who
	// only show channel operators
	//
	//  - conflict: true
	//  - origin: "Unreal"
	AuditoriumUnreal ChanMode = 'u'
	// AutoOp (AUTO_OP) -- Users that match the given mask will have the
	// given modes when they join the channel.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	//  - parameter: "<flag>:<mask>"
	AutoOp ChanMode = 'w'
	// Ban (BAN) -- Bans the specified mask from the channel
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	//  - parameter: "n!u@h mask"
	Ban ChanMode = 'b'
	// BanException (BAN_EXCEPTION) -- Creates a ban exception using the
	// given mask. Normally, if someone's identity fits a channel ban mask,
	// they are banned. If their identity also matches the ban exception
	// mask, they are allowed not banned (exempt from the ban)
	//
	//  - conflict: false
	//  - origin: "RFC2811"
	//  - parameter: "n!u@h mask"
	BanException ChanMode = 'e'
	// Blockcaps (BLOCKCAPS) -- Block messages with too many CAPITAL LETTERS.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	Blockcaps ChanMode = 'B'
	// Chanfilter (CHANFILTER) -- Blocks messages matching <keyword>
	// (including wildcards).
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	//  - parameter: "<keyword>"
	Chanfilter ChanMode = 'g'
	// ChannelOwnerUnreal (CHANNEL_OWNER) -- Gives the nickname channel
	// owner status
	//
	//  - conflict: true
	//  - origin: "Unreal"
	//  - parameter: "Nickname"
	ChannelOwnerUnreal ChanMode = 'q'
	// ChannelProtectionUnreal (CHANNEL_PROTECTION) -- Gives the given
	// nickname 'protection'; Cannot be kicked/deopped
	//
	//  - conflict: true
	//  - origin: "Unreal"
	//  - parameter: "Nickname"
	ChannelProtectionUnreal ChanMode = 'a'
	// Creator (CREATOR) -- Give the specified nickname channel creator
	// status
	//
	//  - conflict: true
	//  - origin: "RFC2811"
	//  - parameter: "Nickname"
	Creator ChanMode = 'O'
	// Delayjoins (DELAYJOINS) -- When set, all joins are hidden until the
	// user is given a voice, oper status, until they speak, or change a
	// topic etc.
	//
	//  - conflict: false
	//  - origin: "QuakeNet"
	Delayjoins ChanMode = 'D'
	// DelaymsgInspircd (DELAYMSG) -- Disallows a user from talking in the
	// channel until they've been in there for the specified number of
	// seconds.
	//
	//  - conflict: true
	//  - origin: "InspIRCd"
	//  - parameter: "<secs>"
	DelaymsgInspircd ChanMode = 'd'
	// Deny (DENY) -- Like ban, but apparently bans through matching the
	// given one- word mask to the 'irc-name' or 'real name' field a client
	// has.
	//
	//  - conflict: true
	//  - origin: "unknown"
	//  - parameter: "Real-name"
	Deny ChanMode = 'd'
	// EventAusthex (EVENT) -- Stops users from changing their nicknames
	// when set. AustNet considers this obsolete, due to the conflict
	// between the more widely accepted use of the 'e' mode.
	//
	//  - conflict: true
	//  - origin: "AustHex"
	EventAusthex ChanMode = 'e'
	// ExemptChanops (EXEMPT_CHANOPS) -- Lets users who have the given
	// permission flag (or above) bypass certain restrictions
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	//  - parameter: "<flag>:<restriction>"
	ExemptChanops ChanMode = 'X'
	// FloodLimitUnreal (FLOOD_LIMIT) -- Flood limiter
	//
	//  - conflict: true
	//  - origin: "Unreal"
	//  - parameter: "<lines>:<seconds>"
	FloodLimitUnreal ChanMode = 'f'
	// ForwardCharybdis (FORWARD) -- Forwards users who cannot join because
	// of +i, +j, +l or +r to the given channel.
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	//  - parameter: "<channel>"
	ForwardCharybdis ChanMode = 'f'
	// FounderTrIrcd (FOUNDER) -- Gives the specified nickname 'founder'
	// status.
	//
	//  - conflict: true
	//  - origin: "tr-ircd"
	FounderTrIrcd ChanMode = 'u'
	// FreeInviteCharybdis (FREE_INVITE) -- Everyone may invite users
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	FreeInviteCharybdis ChanMode = 'g'
	// FreeTargetCharybdis (FREE_TARGET) -- Anyone may set FORWARDs to this
	// channel (otherwise ops are necessary)
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	FreeTargetCharybdis ChanMode = 'F'
	// Halfop (HALFOP) -- Gives the specified nickname channel
	// half-operator status
	//
	//  - conflict: false
	//  - origin: "RFC2811"
	//  - parameter: "Nickname"
	Halfop ChanMode = 'h'
	// HasHiddenQuakenet (HAS_HIDDEN) -- Set by the server when the channel
	// mode +D (on QuakeNet) was removed, but there are still 'hidden' users
	// in the channel
	//
	//  - conflict: true
	//  - origin: "QuakeNet"
	HasHiddenQuakenet ChanMode = 'd'
	// HideopsHybrid (HIDEOPS) -- Anonymous operators - channel operators a
	// hidden
	//
	//  - conflict: true
	//  - origin: "Hybrid"
	HideopsHybrid ChanMode = 'a'
	// History (HISTORY) -- When users join, show them <num> lines or <sec>
	// seconds of channel history, whichever is shorter.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	//  - parameter: "<num>:<sec>"
	History ChanMode = 'H'
	// InvitationMask (INVITATION_MASK) -- If the channel is marked as
	// invite only, users matching the mask(s) set using this mode are
	// allowed to enter without invitation. Also called "invite exempt"
	//
	//  - conflict: false
	//  - origin: "RFC2811"
	//  - parameter: "n!u@h mask"
	InvitationMask ChanMode = 'I'
	// InviteOnly (INVITE_ONLY) -- Marks the channel as invite only. When
	// set, clients must be invited using the INVITE command prior to being
	// allowed to join the channel
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	InviteOnly ChanMode = 'i'
	// JoinThrottle (JOIN_THROTTLE) -- When set, 'count' number of users
	// may join this channel per 'time'
	//
	//  - conflict: false
	//  - origin: "Charybdis?"
	//  - parameter: "<count>:<time>"
	JoinThrottle ChanMode = 'j'
	// JoinThrottleDancer (JOIN_THROTTLE) -- When set, users may join this
	// channel once every 'frequency' seconds with an initial burst and
	// limit value of 'limit' users
	//
	//  - conflict: true
	//  - origin: "Dancer"
	//  - parameter: "<frequency>,<limit>"
	JoinThrottleDancer ChanMode = 'J'
	// Keylock (KEYLOCK) -- Locks the channel with the given password,
	// which must be specified via the JOIN command to any clients
	// attempting to join the channel when set. The correct key must be
	// given when turning this mode off.
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	//  - parameter: "Password"
	Keylock ChanMode = 'k'
	// KickNorejoin (KICK_NOREJOIN) -- After being KICKed, user can't
	// rejoin for <sec> seconds.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	//  - parameter: "<sec>"
	KickNorejoin ChanMode = 'J'
	// LargeBanlistCharybdis (LARGE_BANLIST) -- Increase the number of
	// +beIq entries allowed for this channel. Only settable by IRC opers
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	LargeBanlistCharybdis ChanMode = 'L'
	// Limit (LIMIT) -- Limits the channel to only allow the given number
	// of members to be in the channel while the mode is set. Nobody else is
	// allowed to join the channel while the channel membership count is
	// greater than or equal to the number given with the mode, however some
	// implementations allow IRC operators to circumvent that rule. Most
	// traditional implementations accept only a signed integer here (using
	// atoi()), however some more modern implementations may accept an
	// unsigned integer (i.e. strtoul()), or even have machine variations on
	// whether a 32-bit or 64-bit integer is accepted.
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	//  - parameter: "Integer"
	Limit ChanMode = 'l'
	// LinkUnreal (LINK) -- If the channel is +l, and the channel is full,
	// users will be redirected to the given channel
	//
	//  - conflict: true
	//  - origin: "Unreal"
	//  - parameter: "<channel>"
	LinkUnreal ChanMode = 'L'
	// ListedBahamut (LISTED) --
	//
	//  - conflict: true
	//  - origin: "Bahamut"
	ListedBahamut ChanMode = 'L'
	// Moderated (MODERATED) -- The channel is being moderated. Only users
	// who have a voice are able to talk (people who are voiced or channel
	// operator members)
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	Moderated ChanMode = 'm'
	// ModregBahamut (MODREG) -- Unregistered/unidentified clients cannot
	// send text to the channel
	//
	//  - conflict: true
	//  - origin: "Bahamut"
	ModregBahamut ChanMode = 'M'
	// NamedModes (NAMED_MODES) -- Allows the display and modification of
	// channel modes with long-form names.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	NamedModes ChanMode = 'Z'
	// NickfloodInspircd (NICKFLOOD) -- Only allow <num> nick changes per
	// <sec> seconds, to stop spam.
	//
	//  - conflict: true
	//  - origin: "InspIRCd"
	//  - parameter: "<num>:<sec>"
	NickfloodInspircd ChanMode = 'F'
	// NocolourBahamut (NOCOLOUR) -- Stops colour from being broadcast from
	// the channel. Some implementations drop lines, some implementations
	// strip it.
	//
	//  - conflict: true
	//  - origin: "Bahamut"
	NocolourBahamut ChanMode = 'c'
	// NocontrolHybrid (NOCONTROL) -- Stops control codes from being
	// broadcast from the channel.
	//
	//  - conflict: true
	//  - origin: "Hybrid?"
	NocontrolHybrid ChanMode = 'c'
	// Noknock (NOKNOCK) -- Disables people using KNOCK on the channel
	//
	//  - conflict: false
	//  - origin: "Unreal"
	Noknock ChanMode = 'K'
	// NooperkickIrcdSeven (NOOPERKICK) -- Disallows kicking an oper from
	// the channel. Only settable by IRC opers.
	//
	//  - conflict: true
	//  - origin: "ircd-seven"
	NooperkickIrcdSeven ChanMode = 'M'
	// NoquitpartsQuakenet (NOQUITPARTS) -- When set, this hides all part
	// messages (no part reasons are broadcast) and all quit reasons are
	// simply replaced with a generic string such as \
	//
	//  - conflict: true
	//  - origin: "QuakeNet"
	NoquitpartsQuakenet ChanMode = 'u'
	// NoCtcp (NO_CTCP) -- Stops people from sending CTCP commands to the
	// channel
	//
	//  - conflict: false
	//  - origin: "Unreal"
	NoCtcp ChanMode = 'C'
	// NoExternal (NO_EXTERNAL) -- Only allow users who are joined to this
	// channel to send messages to the channel
	//
	//  - conflict: false
	//  - origin: "Hybrid?"
	NoExternal ChanMode = '\x00'
	// NoForwardCharybdis (NO_FORWARD) -- Users cannot be forwarded to this
	// channel
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	NoForwardCharybdis ChanMode = 'Q'
	// NoHidingUnreal (NO_HIDING) -- When set, this stops users set umode
	// +I (INVISIBLE_JOINPART) from being able to join or part a channel
	// secretly
	//
	//  - conflict: true
	//  - origin: "Unreal"
	NoHidingUnreal ChanMode = 'H'
	// NoInvite (NO_INVITE) -- Stop channel members inviting people
	//
	//  - conflict: false
	//  - origin: "Unreal"
	NoInvite ChanMode = 'V'
	// NoKickUnreal (NO_KICK) -- Disallow people being kicked from the
	// channel
	//
	//  - conflict: true
	//  - origin: "Unreal"
	NoKickUnreal ChanMode = 'Q'
	// NoNickChange (NO_NICK_CHANGE) -- Disallow nickname changes. This is
	// similar to AustHex's obsolete +e ('event') mode
	//
	//  - conflict: false
	//  - origin: "Unreal"
	NoNickChange ChanMode = '\x00'
	// NoNotice (NO_NOTICE) -- No NOTICEs can be sent to this channel
	//
	//  - conflict: false
	//  - origin: "Charybdis?"
	NoNotice ChanMode = 'T'
	// Ojoin (OJOIN) -- Marks a user as an oper in the channel with a
	// defined prefix in front of their nick, when an IRC oper issues the
	// OJOIN command.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	Ojoin ChanMode = 'Y'
	// Oper (OPER) -- Gives the specified nickname channel operator status
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	//  - parameter: "Nickname"
	Oper ChanMode = 'o'
	// OperOnlyBahamutUnreal (OPER_ONLY) -- Channel only allows IRC
	// operators to join
	//
	//  - conflict: true
	//  - origin: "Bahamut, Unreal"
	OperOnlyBahamutUnreal ChanMode = 'O'
	// OperPrefix (OPER_PREFIX) -- Marks a user as an oper in the channel
	// with a defined prefix in front of their nick.
	//
	//  - conflict: false
	//  - origin: "InspIRCd"
	OperPrefix ChanMode = 'y'
	// OpModeratedCharybdis (OP_MODERATED) -- Messages blocked by +m, +b,
	// and +q are instead sent to ops
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	OpModeratedCharybdis ChanMode = 'z'
	// ParanoiaHybrid (PARANOIA) -- Controls whether half-ops may invite
	// users into the channel or whether they can kick other members of the
	// channel
	//
	//  - conflict: true
	//  - origin: "Hybrid"
	ParanoiaHybrid ChanMode = 'p'
	// Permanent (PERMANENT) -- Channel does not disappear when empty. Only
	// settable by IRC opers
	//
	//  - conflict: false
	//  - origin: "Charybdis?"
	Permanent ChanMode = 'P'
	// Private (PRIVATE) -- Marks the channel as private. Using this form,
	// +p cannot be set with +s at the same time. Setting +p while +s is set
	// turns off +s, and vice-versa. This is widely considered obsolete in
	// favour of the secret mode (+s).
	//
	//  - conflict: true
	//  - origin: "RFC1459"
	Private ChanMode = 'p'
	// PrivateHybrid (PRIVATE) -- This restricts KNOCK, and prevents
	// half-ops from using +h
	//
	//  - conflict: true
	//  - origin: "Hybrid"
	PrivateHybrid ChanMode = 'p'
	// PrivateCharybdis (PRIVATE) -- This restricts KNOCK
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	PrivateCharybdis ChanMode = 'p'
	// Quiet (QUIET) -- Sets the channel to be quiet. When set, it
	// restricts what is sent to clients who are on the channel. Joins,
	// parts, and nick changes are not broadcast. From the user's point of
	// view, the channel only contains one user (them).
	//
	//  - conflict: true
	//  - origin: "RFC2811"
	Quiet ChanMode = 'q'
	// QuietCharybdis (QUIET) -- Prevents a user from sending to the
	// channel or changing nick, based on a nickmask match
	//
	//  - conflict: true
	//  - origin: "Charybdis?"
	//  - parameter: "<nickmask>"
	QuietCharybdis ChanMode = 'q'
	// RegisteredBahamut (REGISTERED) -- Channel is registered with a
	// network channel service
	//
	//  - conflict: true
	//  - origin: "Bahamut"
	RegisteredBahamut ChanMode = 'r'
	// RegonlyHybrid (REGONLY) -- Channel only allows registered nicknames
	// to join
	//
	//  - conflict: true
	//  - origin: "Hybrid?"
	RegonlyHybrid ChanMode = 'R'
	// RegonlyIrcu (REGONLY) -- Channel only allows registered nicknames to
	// join/talk.
	//
	//  - conflict: true
	//  - origin: "ircu"
	RegonlyIrcu ChanMode = 'r'
	// RegonlyUnreal (REGONLY) -- Channel only allows registered nicknames
	// to talk.
	//
	//  - conflict: true
	//  - origin: "Unreal"
	RegonlyUnreal ChanMode = 'M'
	// RegonlyBahamutTrIrcd (REGONLY) -- Channel only allows registered
	// nicknames to join/talk
	//
	//  - conflict: true
	//  - origin: "Bahamut, tr-ircd"
	RegonlyBahamutTrIrcd ChanMode = 'R'
	// Reop (REOP) -- This mode is used to prevent a channel from having no
	// operator for an extended period of time. When set, any channel that
	// has lost all its channel operators for a certain period of time
	// automatically has some or all channel members given channel operator
	// status. RFC2811 specifies this is only available to '!' channels, but
	// some implementations are reported to use it on other channel types,
	// since they use timestamping to avoid channel take-overs during
	// network splits.
	//
	//  - conflict: true
	//  - origin: "RFC2811"
	Reop ChanMode = 'r'
	// ReopListIrcnet (REOP_LIST) -- Re-oper list - a list of identities
	// used as a hint for reop when a channel is opless for a long enough
	// time. Only one of the matches is used for the reop.
	//
	//  - conflict: true
	//  - origin: "IRCNet"
	//  - parameter: "n!u@h mask"
	ReopListIrcnet ChanMode = 'R'
	// Secret (SECRET) -- Marks the channel as secret. The channel will not
	// appear in channel listings, the NAMES command will not list nicknames
	// for users who are not channel members, and the channel will not
	// appear in WHOIS unless WHOIS is called by a fellow channel member.
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	Secret ChanMode = 's'
	// SecuredOnlyHybrid (SECURED_ONLY) -- Only allows clients connected
	// via secure connections to join (eg. TLS)
	//
	//  - conflict: true
	//  - origin: "Hybrid?"
	SecuredOnlyHybrid ChanMode = 'S'
	// SecuredOnlyUnreal (SECURED_ONLY) -- Only allows clients connected
	// via secure connections to join (eg. TLS)
	//
	//  - conflict: true
	//  - origin: "Unreal"
	SecuredOnlyUnreal ChanMode = 'z'
	// StripUnreal (STRIP) -- Strip formatting codes from messages sent to
	// the channel
	//
	//  - conflict: true
	//  - origin: "Unreal"
	StripUnreal ChanMode = 'S'
	// StripBadWords (STRIP_BAD_WORDS) -- Strips profanity from messages
	// broadcast through the channel
	//
	//  - conflict: false
	//  - origin: "Unreal"
	StripBadWords ChanMode = 'G'
	// TopicLock (TOPIC_LOCK) -- Topic is locked, and can only be changed
	// by channel operators
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	TopicLock ChanMode = 't'
	// Voice (VOICE) -- Gives the specified nickname a voice. The user may
	// then speak when the channel is being moderated (+m).
	//
	//  - conflict: false
	//  - origin: "RFC1459"
	//  - parameter: "Nickname"
	Voice ChanMode = 'v'
)
